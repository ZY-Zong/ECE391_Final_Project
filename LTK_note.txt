2019.10.19
    start MP3
    try to be familiar with git branch
    try to merge
    begin mp3.1
    Load the GDT
        the GDT discription is in IA32 doc 3.5.1 (p 838) 
        .quad is for a space of 64 bits value
        realized that I just need to translate the CS into GDT 
        OK...the GDT is already povoded
        maybe the thing I need to do is to initialize all these in boot.S

2019.10.20
    deal with paging 
        basic idea: translate linear address into physical address 
        CR3(PDBR) holds the base of PD, which is changed when new program is executed
        the doc says set the mapping according to the order of the program 
        need to do:
            initialize the paging (kernel) when OS boot 
            set a new page when new program run
        3.6.1 paging option: (the ones needed)
            paging flag: bit 31 of CR0 
            page size extension flag: bit 4 of CR4
        in cp1, I only need to 
            set first 0-4MB into 4kb pages 
                map VRAM corrected, and set others as not present
            set 4MB-4GB into 4MB pages 
                map virtual memory 4-8MB to physical memory 4-8MB 
                set others as not present 
        just use one page directory and one mode 
        but set the PS bit in the PDE for a 4MB page 
        figuring out where ot store PD and PT 
            maybe in x86_desc.S 
            align to 4kB?
        4kB: 12 bits 
        bit 7 of PDE is for PS (0 for 4kB, 1 for 4MB)
        PDE detail def see 3.7.6
        need to be careful about all the flags in PDE and PTE 
        this version may work, may init them in x86_desc.S for optimize
        change the init into static 
        done 

2019.10.25
    cp2: file system 
    figuring what to do 
    look at kernel.c 

2019.10.26
    I am given a file system mp3.img and loaded at boot (entry())
    looking at kernel.c to find the address 
        guess: contian in addr that is passed into entry as para 
        elf? a kind of executable file.
            I think it is not related for my file system 
        possible thing that is file system:
            modules: there are mods_count of them 
                the module is just a struct desicrbing the mod 
                so it is fix size sizeof(module), thus can use pointer althematic to ++
                however, the actual module in memory may have different size 
                which is stored in struct module 
                how do I know which is which....
            mmap
                %#x means add "0x" in front of the number 
                it is just the memory range and loading anything 
        the filesys_img may be loaded in one of the module 
        figuring which module is the file system 
            need to boot the OS and see 
            It seems that there is only one module 
            just pass the first module, 
                if it is wrong, just need to change this 
    see how ls behave 
        may need to change some of the syscall for file system ?
    look at how file system works 
    begin to write the functions
        init_file_system()
            need to store the system with global variable 
        file_open()
            what is initialize?
            maybe not needed in this case 
            if it do the job of init_file_system(), what will dir_open() do..
            I think all of them do nothing in the our OS 
        add public function header
        fill in all the headers tomorrow

2019.10.27
    countinue with the functions 
        open close may be used in cp3, for fd 
        init_file_system()
            save inodes pointer and data block pointer 
        public functions 
            read_data()
                need to be careful about boundary 
        file and directory functions 
            ... don't know why I need them
                maybe for the funture use 
    begin with file system abstraction 
?        open stdin and stdout at init?
        add functions for abtract system 
        write functions for each type 
        need to make sure: the para can be changed by function call
            if not, should update file position by adding data read 
            no... pass by value 

2019.11.2
    start cp3 
    things need to change:
        modify the name: PCB_t into "file array"
            for each program, need to get file array in its PCB 
            rather than use global varibale 
        get paging into seperate file 
    begin with file_loader in paging file 
        need to check whether this is a executable file (ELF)
            add the function in file system, and sligtly modufy file_read()
            OK, put it in task_paging.c temperorly
        need to figure out where to load (relate to paging)
            why there is a offset from 128MB ?
                because before actual program start, there are some format thing 
                just load the whole image in 128MB is OK 
        deal with paging turn on and off 
            struct for PDE? OK 
            not sure what to do in task_turn_off_paging
                just call turn on for pre_id? 
        need to switch file_array for each task 
        do tomorrow 

2019.11.3
    countinue

